// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: copyfrom.go

package sqlcgen

import (
	"context"
)

// iteratorForInsertArticleTag implements pgx.CopyFromSource.
type iteratorForInsertArticleTag struct {
	rows                 []InsertArticleTagParams
	skippedFirstNextCall bool
}

func (r *iteratorForInsertArticleTag) Next() bool {
	if len(r.rows) == 0 {
		return false
	}
	if !r.skippedFirstNextCall {
		r.skippedFirstNextCall = true
		return true
	}
	r.rows = r.rows[1:]
	return len(r.rows) > 0
}

func (r iteratorForInsertArticleTag) Values() ([]interface{}, error) {
	return []interface{}{
		r.rows[0].CreatedAt,
		r.rows[0].ArticleID,
		r.rows[0].Tag,
	}, nil
}

func (r iteratorForInsertArticleTag) Err() error {
	return nil
}

func (q *Queries) InsertArticleTag(ctx context.Context, db DBTX, arg []InsertArticleTagParams) (int64, error) {
	return db.CopyFrom(ctx, []string{"article_tag_"}, []string{"created_at_", "article_id_", "tag_"}, &iteratorForInsertArticleTag{rows: arg})
}
