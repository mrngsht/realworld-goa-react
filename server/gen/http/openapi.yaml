swagger: "2.0"
info:
    title: readworld app example
    description: readworld app example
    version: 0.0.1
host: localhost:8080
basePath: api
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/article/{articleId}:
        get:
            tags:
                - article
            summary: get article
            operationId: article#get
            parameters:
                - name: articleId
                  in: path
                  required: true
                  type: string
                  format: uuid
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ArticleGetResponseBody'
                        required:
                            - article
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ArticleGetArticleBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/article/{articleId}/favorite:
        post:
            tags:
                - article
            summary: favorite article
            operationId: article#favorite
            parameters:
                - name: articleId
                  in: path
                  required: true
                  type: string
                  format: uuid
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ArticleFavoriteResponseBody'
                        required:
                            - article
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ArticleFavoriteArticleBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/article/create:
        post:
            tags:
                - article
            summary: create article
            operationId: article#create
            parameters:
                - name: CreateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ArticleCreateRequestBody'
                    required:
                        - title
                        - description
                        - body
                        - tagList
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ArticleCreateResponseBody'
                        required:
                            - article
            schemes:
                - http
    /api/profile/follow_user:
        post:
            tags:
                - profile
            summary: followUser profile
            operationId: profile#followUser
            parameters:
                - name: FollowUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProfileFollowUserRequestBody'
                    required:
                        - username
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProfileFollowUserResponseBody'
                        required:
                            - profile
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ProfileFollowUserBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/profile/unfollow_user:
        post:
            tags:
                - profile
            summary: unfollowUser profile
            operationId: profile#unfollowUser
            parameters:
                - name: UnfollowUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProfileUnfollowUserRequestBody'
                    required:
                        - username
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProfileUnfollowUserResponseBody'
                        required:
                            - profile
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ProfileUnfollowUserBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/user/current:
        get:
            tags:
                - user
            summary: getCurrent user
            operationId: user#getCurrent
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserGetCurrentResponseBody'
                        required:
                            - user
            schemes:
                - http
    /api/user/login:
        post:
            tags:
                - user
            summary: login user
            operationId: user#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserLoginResponseBody'
                        required:
                            - user
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/UserLoginBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/user/register:
        post:
            tags:
                - user
            summary: register user
            operationId: user#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserRegisterRequestBody'
                    required:
                        - username
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRegisterResponseBody'
                        required:
                            - user
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/UserRegisterBadRequest'
                        required:
                            - code
            schemes:
                - http
    /api/user/update:
        post:
            tags:
                - user
            summary: update user
            operationId: user#update
            parameters:
                - name: UpdateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserUpdateRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserUpdateResponseBody'
                        required:
                            - user
            schemes:
                - http
definitions:
    ArticleCreateRequestBody:
        title: ArticleCreateRequestBody
        type: object
        properties:
            body:
                type: string
                example: Rerum amet nihil.
            description:
                type: string
                example: Sit ab veritatis optio.
            tagList:
                type: array
                items:
                    type: string
                    example: Eos libero aut.
                example:
                    - Ipsam quibusdam.
                    - Et quidem voluptatem ut totam sed rerum.
                    - Tempore est ipsum labore rerum similique voluptas.
                    - Hic minima quas sapiente reprehenderit sed autem.
            title:
                type: string
                example: da7
                maxLength: 128
        example:
            body: Alias fuga.
            description: Blanditiis eligendi qui tenetur asperiores facilis.
            tagList:
                - Velit quis assumenda est deserunt facere.
                - Quia sunt.
                - Voluptas sed et laborum alias debitis enim.
                - Consequuntur dolor doloribus et blanditiis non optio.
            title: tk5
        required:
            - title
            - description
            - body
            - tagList
    ArticleCreateResponseBody:
        title: ArticleCreateResponseBody
        type: object
        properties:
            article:
                $ref: '#/definitions/ArticleDetail'
        example:
            article:
                articleId: 548ac0ea-ce3b-4f6a-88b8-e9ab35c32cf7
                author:
                    bio: Voluptatibus repellendus nihil.
                    following: true
                    image: Consectetur pariatur reprehenderit.
                    username: Laudantium ipsam mollitia est deleniti nemo.
                body: Ab id libero natus quia sapiente.
                createdAt: "1978-12-02T15:02:01Z"
                description: Amet autem est voluptate dignissimos molestiae.
                favorited: false
                favoritesCount: 7134760473468781600
                tagList:
                    - Voluptates fuga ipsum.
                    - Tenetur non impedit eaque.
                    - Adipisci nostrum quae aut nihil voluptatibus nisi.
                    - Possimus qui ad cum.
                title: Dolor nesciunt.
                updatedAt: "2006-11-16T05:09:33Z"
        required:
            - article
    ArticleDetail:
        title: ArticleDetail
        type: object
        properties:
            articleId:
                type: string
                example: d1aadedf-91c4-426f-acea-f231ad3bcd63
                format: uuid
            author:
                $ref: '#/definitions/Profile'
            body:
                type: string
                example: Aut quae.
            createdAt:
                type: string
                example: "2014-08-01T11:05:33Z"
                format: date-time
            description:
                type: string
                example: Qui quia et odit omnis non.
            favorited:
                type: boolean
                example: false
            favoritesCount:
                type: integer
                example: 10914977178885060216
                format: int64
            tagList:
                type: array
                items:
                    type: string
                    example: Ducimus fugit est qui ut.
                example:
                    - Optio quia sint sequi ut.
                    - Ea mollitia facere ut inventore voluptatem.
                    - A perferendis quo pariatur nulla.
                    - Doloribus nostrum ullam autem libero molestiae.
            title:
                type: string
                example: Porro perspiciatis mollitia maxime in repellendus non.
            updatedAt:
                type: string
                example: "1976-02-29T20:46:09Z"
                format: date-time
        example:
            articleId: ed823ba7-0b44-4a9a-956d-13a3c1c69c52
            author:
                bio: Voluptatibus repellendus nihil.
                following: true
                image: Consectetur pariatur reprehenderit.
                username: Laudantium ipsam mollitia est deleniti nemo.
            body: Aut dolores et veniam.
            createdAt: "2010-10-31T20:31:10Z"
            description: Rerum beatae.
            favorited: true
            favoritesCount: 6541229258948543589
            tagList:
                - Autem et sit in repellat.
                - Quaerat deserunt est est minus dolor libero.
                - Excepturi praesentium.
                - Ipsa eum ea.
            title: Voluptatem a et quidem culpa vero.
            updatedAt: "1993-05-21T09:54:33Z"
        required:
            - articleId
            - title
            - description
            - body
            - tagList
            - createdAt
            - updatedAt
            - favorited
            - favoritesCount
            - author
    ArticleFavoriteArticleBadRequest:
        title: ArticleFavoriteArticleBadRequest
        type: object
        properties:
            code:
                type: string
                example: Unspecified
                enum:
                    - Unspecified
                    - ArticleNotFound
        example:
            code: ArticleNotFound
        required:
            - code
    ArticleFavoriteResponseBody:
        title: ArticleFavoriteResponseBody
        type: object
        properties:
            article:
                $ref: '#/definitions/ArticleDetail'
        example:
            article:
                articleId: 548ac0ea-ce3b-4f6a-88b8-e9ab35c32cf7
                author:
                    bio: Voluptatibus repellendus nihil.
                    following: true
                    image: Consectetur pariatur reprehenderit.
                    username: Laudantium ipsam mollitia est deleniti nemo.
                body: Ab id libero natus quia sapiente.
                createdAt: "1978-12-02T15:02:01Z"
                description: Amet autem est voluptate dignissimos molestiae.
                favorited: false
                favoritesCount: 7134760473468781600
                tagList:
                    - Voluptates fuga ipsum.
                    - Tenetur non impedit eaque.
                    - Adipisci nostrum quae aut nihil voluptatibus nisi.
                    - Possimus qui ad cum.
                title: Dolor nesciunt.
                updatedAt: "2006-11-16T05:09:33Z"
        required:
            - article
    ArticleGetArticleBadRequest:
        title: ArticleGetArticleBadRequest
        type: object
        properties:
            code:
                type: string
                example: Unspecified
                enum:
                    - Unspecified
                    - ArticleNotFound
        example:
            code: ArticleNotFound
        required:
            - code
    ArticleGetResponseBody:
        title: ArticleGetResponseBody
        type: object
        properties:
            article:
                $ref: '#/definitions/ArticleDetail'
        example:
            article:
                articleId: 548ac0ea-ce3b-4f6a-88b8-e9ab35c32cf7
                author:
                    bio: Voluptatibus repellendus nihil.
                    following: true
                    image: Consectetur pariatur reprehenderit.
                    username: Laudantium ipsam mollitia est deleniti nemo.
                body: Ab id libero natus quia sapiente.
                createdAt: "1978-12-02T15:02:01Z"
                description: Amet autem est voluptate dignissimos molestiae.
                favorited: false
                favoritesCount: 7134760473468781600
                tagList:
                    - Voluptates fuga ipsum.
                    - Tenetur non impedit eaque.
                    - Adipisci nostrum quae aut nihil voluptatibus nisi.
                    - Possimus qui ad cum.
                title: Dolor nesciunt.
                updatedAt: "2006-11-16T05:09:33Z"
        required:
            - article
    Profile:
        title: Profile
        type: object
        properties:
            bio:
                type: string
                example: Facilis eligendi placeat occaecati et.
            following:
                type: boolean
                example: false
            image:
                type: string
                example: Non excepturi et.
            username:
                type: string
                example: Nostrum et asperiores pariatur et molestiae dolore.
        example:
            bio: Non quam.
            following: true
            image: Cumque id animi nesciunt inventore.
            username: Necessitatibus molestiae aut in.
        required:
            - username
            - bio
            - image
            - following
    ProfileFollowUserBadRequest:
        title: ProfileFollowUserBadRequest
        type: object
        properties:
            code:
                type: string
                example: CannotFollowYourself
                enum:
                    - Unspecified
                    - UserNotFound
                    - UserAlreadyFollowing
                    - CannotFollowYourself
        example:
            code: CannotFollowYourself
        required:
            - code
    ProfileFollowUserRequestBody:
        title: ProfileFollowUserRequestBody
        type: object
        properties:
            username:
                type: string
                example: zst
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            username: did
        required:
            - username
    ProfileFollowUserResponseBody:
        title: ProfileFollowUserResponseBody
        type: object
        properties:
            profile:
                $ref: '#/definitions/Profile'
        example:
            profile:
                bio: Voluptatibus repellendus nihil.
                following: true
                image: Consectetur pariatur reprehenderit.
                username: Laudantium ipsam mollitia est deleniti nemo.
        required:
            - profile
    ProfileUnfollowUserBadRequest:
        title: ProfileUnfollowUserBadRequest
        type: object
        properties:
            code:
                type: string
                example: UserNotFollowing
                enum:
                    - Unspecified
                    - UserNotFound
                    - UserNotFollowing
        example:
            code: Unspecified
        required:
            - code
    ProfileUnfollowUserRequestBody:
        title: ProfileUnfollowUserRequestBody
        type: object
        properties:
            username:
                type: string
                example: enb
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            username: dB1mu
        required:
            - username
    ProfileUnfollowUserResponseBody:
        title: ProfileUnfollowUserResponseBody
        type: object
        properties:
            profile:
                $ref: '#/definitions/Profile'
        example:
            profile:
                bio: Voluptatibus repellendus nihil.
                following: true
                image: Consectetur pariatur reprehenderit.
                username: Laudantium ipsam mollitia est deleniti nemo.
        required:
            - profile
    User:
        title: User
        type: object
        properties:
            bio:
                type: string
                example: Tempore aut debitis amet id perferendis.
            email:
                type: string
                example: Repellat error eaque.
            image:
                type: string
                example: Nihil tempora consequatur dolorem omnis eos.
            token:
                type: string
                example: Veritatis voluptates exercitationem architecto vitae recusandae dolorem.
            username:
                type: string
                example: Illo ea illum.
        example:
            bio: Consequatur eaque totam cum et repellat.
            email: Est qui odio nostrum cum rerum.
            image: Earum quasi quam ducimus voluptatibus cum assumenda.
            token: Quia eius commodi et sit.
            username: Officia perferendis tempore et rerum.
        required:
            - email
            - token
            - username
            - bio
            - image
    UserGetCurrentResponseBody:
        title: UserGetCurrentResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Error incidunt iure optio.
                email: Quis occaecati quas quis.
                image: Et autem voluptates harum.
                token: Et provident iste.
                username: Sed ullam ea provident voluptates laborum hic.
        required:
            - user
    UserLoginBadRequest:
        title: UserLoginBadRequest
        type: object
        properties:
            code:
                type: string
                example: PasswordIsIncorrect
                enum:
                    - Unspecified
                    - EmailNotFound
                    - PasswordIsIncorrect
        example:
            code: Unspecified
        required:
            - code
    UserLoginRequestBody:
        title: UserLoginRequestBody
        type: object
        properties:
            email:
                type: string
                example: aurelia.ferry@mertzkuhn.org
                format: email
            password:
                type: string
                example: kqd
                minLength: 6
                maxLength: 128
        example:
            email: clark@hackett.biz
            password: xkf
        required:
            - email
            - password
    UserLoginResponseBody:
        title: UserLoginResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Error incidunt iure optio.
                email: Quis occaecati quas quis.
                image: Et autem voluptates harum.
                token: Et provident iste.
                username: Sed ullam ea provident voluptates laborum hic.
        required:
            - user
    UserRegisterBadRequest:
        title: UserRegisterBadRequest
        type: object
        properties:
            code:
                type: string
                example: EmailAlreadyUsed
                enum:
                    - Unspecified
                    - UsernameAlreadyUsed
                    - EmailAlreadyUsed
        example:
            code: EmailAlreadyUsed
        required:
            - code
    UserRegisterRequestBody:
        title: UserRegisterRequestBody
        type: object
        properties:
            email:
                type: string
                example: marquis@grant.com
                format: email
            password:
                type: string
                example: "385"
                minLength: 6
                maxLength: 128
            username:
                type: string
                example: MaL
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            email: leda@doyle.info
            password: qh0
            username: 1Tb
        required:
            - username
            - email
            - password
    UserRegisterResponseBody:
        title: UserRegisterResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Error incidunt iure optio.
                email: Quis occaecati quas quis.
                image: Et autem voluptates harum.
                token: Et provident iste.
                username: Sed ullam ea provident voluptates laborum hic.
        required:
            - user
    UserUpdateRequestBody:
        title: UserUpdateRequestBody
        type: object
        properties:
            bio:
                type: string
                example: nmh
                maxLength: 4096
            email:
                type: string
                example: amie.pouros@gerhold.com
                format: email
            image:
                type: string
                example: http://79
                pattern: ^https?://.+$
            password:
                type: string
                example: fah
                minLength: 6
                maxLength: 128
            username:
                type: string
                example: HUZ
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            bio: ry8
            email: nettie@buckridge.name
            image: http://iw
            password: 7yf
            username: a732M
    UserUpdateResponseBody:
        title: UserUpdateResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Error incidunt iure optio.
                email: Quis occaecati quas quis.
                image: Et autem voluptates harum.
                token: Et provident iste.
                username: Sed ullam ea provident voluptates laborum hic.
        required:
            - user
