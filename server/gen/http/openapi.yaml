swagger: "2.0"
info:
    title: readworld app example
    description: readworld app example
    version: 0.0.1
host: localhost:8080
basePath: api
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /api/article/create:
        post:
            tags:
                - article
            summary: create article
            operationId: article#create
            parameters:
                - name: CreateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ArticleCreateRequestBody'
                    required:
                        - title
                        - description
                        - body
                        - tagList
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ArticleCreateResponseBody'
                        required:
                            - article
            schemes:
                - http
    /api/profile/follow_user:
        post:
            tags:
                - profile
            summary: followUser profile
            operationId: profile#followUser
            parameters:
                - name: FollowUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProfileFollowUserRequestBody'
                    required:
                        - username
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProfileFollowUserResponseBody'
                        required:
                            - profile
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ProfileFollowUserUserAlreadyFollowingResponseBody'
            schemes:
                - http
    /api/profile/unfollow_user:
        post:
            tags:
                - profile
            summary: unfollowUser profile
            operationId: profile#unfollowUser
            parameters:
                - name: UnfollowUserRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/ProfileUnfollowUserRequestBody'
                    required:
                        - username
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ProfileUnfollowUserResponseBody'
                        required:
                            - profile
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/ProfileUnfollowUserUserNotFollowingResponseBody'
            schemes:
                - http
    /api/user/current:
        get:
            tags:
                - user
            summary: getCurrent user
            operationId: user#getCurrent
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserGetCurrentResponseBody'
                        required:
                            - user
            schemes:
                - http
    /api/user/login:
        post:
            tags:
                - user
            summary: login user
            operationId: user#login
            parameters:
                - name: LoginRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserLoginRequestBody'
                    required:
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserLoginResponseBody'
                        required:
                            - user
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/UserLoginPasswordIsIncorrectResponseBody'
            schemes:
                - http
    /api/user/register:
        post:
            tags:
                - user
            summary: register user
            operationId: user#register
            parameters:
                - name: RegisterRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserRegisterRequestBody'
                    required:
                        - username
                        - email
                        - password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserRegisterResponseBody'
                        required:
                            - user
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/UserRegisterEmailAlreadyUsedResponseBody'
            schemes:
                - http
    /api/user/update:
        post:
            tags:
                - user
            summary: update user
            operationId: user#update
            parameters:
                - name: UpdateRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UserUpdateRequestBody'
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UserUpdateResponseBody'
                        required:
                            - user
            schemes:
                - http
definitions:
    ArticleCreateRequestBody:
        title: ArticleCreateRequestBody
        type: object
        properties:
            body:
                type: string
                example: Est temporibus excepturi dolorem blanditiis dolores.
            description:
                type: string
                example: Modi iste consequatur eum voluptatum sed.
            tagList:
                type: array
                items:
                    type: string
                    example: Quod exercitationem accusamus accusamus assumenda dolorem sunt.
                example:
                    - Vel omnis repellendus voluptate.
                    - Itaque ab.
            title:
                type: string
                example: kp8
                maxLength: 128
        example:
            body: Vero totam sunt totam quia.
            description: Modi eveniet cupiditate sunt dolorem repellendus.
            tagList:
                - Iusto aut minus.
                - Ratione modi fugit laboriosam harum.
                - Voluptatem aut qui facilis necessitatibus.
                - Facilis nesciunt dolorum.
            title: aj2
        required:
            - title
            - description
            - body
            - tagList
    ArticleCreateResponseBody:
        title: ArticleCreateResponseBody
        type: object
        properties:
            article:
                $ref: '#/definitions/ArticleDetail'
        example:
            article:
                author:
                    bio: Voluptatibus ut alias voluptatem velit.
                    following: true
                    image: Impedit sed non laudantium autem.
                    username: Dolore corporis quas.
                body: Laboriosam quis corporis.
                createdAt: "1989-08-08T11:57:59Z"
                description: Nemo aliquid iste delectus.
                favorited: true
                favoritesCount: 3324503399791485161
                id: 80af43ba-a3bd-482d-8bd5-f211fbc495c3
                tagList:
                    - Nesciunt voluptatem sunt harum nam sed et.
                    - Porro consequuntur dolore recusandae aut aut.
                title: Quae quo voluptatem.
                updatedAt: "2011-02-03T21:56:03Z"
        required:
            - article
    ArticleDetail:
        title: ArticleDetail
        type: object
        properties:
            author:
                $ref: '#/definitions/Profile'
            body:
                type: string
                example: Nihil voluptatem animi et omnis rem aliquam.
            createdAt:
                type: string
                example: "2015-09-01T15:43:17Z"
                format: date-time
            description:
                type: string
                example: Asperiores est.
            favorited:
                type: boolean
                example: true
            favoritesCount:
                type: integer
                example: 3787795344397264887
                format: int64
            id:
                type: string
                example: 237d1fb1-3430-4401-86a7-002032b6e915
                format: uuid
            tagList:
                type: array
                items:
                    type: string
                    example: Inventore est totam.
                example:
                    - Consequuntur blanditiis velit debitis eum.
                    - Non neque velit consequatur dolorum rerum.
                    - Nisi voluptatem eius sint cum aut in.
            title:
                type: string
                example: Quidem quo voluptatem et nihil.
            updatedAt:
                type: string
                example: "1972-11-15T11:10:15Z"
                format: date-time
        example:
            author:
                bio: Voluptatibus ut alias voluptatem velit.
                following: true
                image: Impedit sed non laudantium autem.
                username: Dolore corporis quas.
            body: Perferendis aut consequatur eos est suscipit.
            createdAt: "1972-11-03T03:09:02Z"
            description: Nobis quasi dolore quas ut ullam.
            favorited: false
            favoritesCount: 3899124705235489535
            id: 8e9a6f85-43ba-4454-90f2-c438a50233ba
            tagList:
                - Qui nostrum voluptate.
                - Incidunt hic.
                - Odio quas architecto voluptas.
            title: Magni provident.
            updatedAt: "1999-03-24T23:41:22Z"
        required:
            - id
            - title
            - description
            - body
            - tagList
            - createdAt
            - updatedAt
            - favorited
            - favoritesCount
            - author
    Profile:
        title: Profile
        type: object
        properties:
            bio:
                type: string
                example: A numquam quibusdam labore esse quaerat culpa.
            following:
                type: boolean
                example: true
            image:
                type: string
                example: Exercitationem vero delectus.
            username:
                type: string
                example: Autem expedita.
        example:
            bio: Minus enim voluptatum ut eaque odit.
            following: false
            image: Odit cupiditate unde eos ab.
            username: Ipsam excepturi vitae voluptatem qui.
        required:
            - username
            - bio
            - image
            - following
    ProfileFollowUserRequestBody:
        title: ProfileFollowUserRequestBody
        type: object
        properties:
            username:
                type: string
                example: geNH
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            username: 46i0
        required:
            - username
    ProfileFollowUserResponseBody:
        title: ProfileFollowUserResponseBody
        type: object
        properties:
            profile:
                $ref: '#/definitions/Profile'
        example:
            profile:
                bio: Voluptatibus ut alias voluptatem velit.
                following: true
                image: Impedit sed non laudantium autem.
                username: Dolore corporis quas.
        required:
            - profile
    ProfileFollowUserUserAlreadyFollowingResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: followUser_UserAlreadyFollowing_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    ProfileFollowUserUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: followUser_UserNotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    ProfileUnfollowUserRequestBody:
        title: ProfileUnfollowUserRequestBody
        type: object
        properties:
            username:
                type: string
                example: zKN
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            username: tmjXd
        required:
            - username
    ProfileUnfollowUserResponseBody:
        title: ProfileUnfollowUserResponseBody
        type: object
        properties:
            profile:
                $ref: '#/definitions/Profile'
        example:
            profile:
                bio: Voluptatibus ut alias voluptatem velit.
                following: true
                image: Impedit sed non laudantium autem.
                username: Dolore corporis quas.
        required:
            - profile
    ProfileUnfollowUserUserNotFollowingResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: unfollowUser_UserNotFollowing_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    ProfileUnfollowUserUserNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: unfollowUser_UserNotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    User:
        title: User
        type: object
        properties:
            bio:
                type: string
                example: Aut necessitatibus molestiae aut in ut non.
            email:
                type: string
                example: Molestiae dolore.
            image:
                type: string
                example: Rerum cumque id animi nesciunt inventore nulla.
            token:
                type: string
                example: Facilis eligendi placeat occaecati et.
            username:
                type: string
                example: Non excepturi et.
        example:
            bio: Magnam quia.
            email: Impedit dolorem est eligendi voluptatem expedita.
            image: Et inventore.
            token: Est quidem sed tenetur.
            username: Quo temporibus.
        required:
            - email
            - token
            - username
            - bio
            - image
    UserGetCurrentResponseBody:
        title: UserGetCurrentResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Et doloremque eligendi quae excepturi.
                email: Ut autem aut quas.
                image: Rem est reprehenderit.
                token: Ducimus et in quibusdam qui nostrum.
                username: Dicta voluptatem distinctio.
        required:
            - user
    UserLoginEmailNotFoundResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: login_EmailNotFound_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: false
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserLoginPasswordIsIncorrectResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: login_PasswordIsIncorrect_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: false
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserLoginRequestBody:
        title: UserLoginRequestBody
        type: object
        properties:
            email:
                type: string
                example: jaclyn@konopelskistanton.net
                format: email
            password:
                type: string
                example: 3w9
                minLength: 6
                maxLength: 128
        example:
            email: mckayla.watsica@bechtelar.biz
            password: 84b
        required:
            - email
            - password
    UserLoginResponseBody:
        title: UserLoginResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Et doloremque eligendi quae excepturi.
                email: Ut autem aut quas.
                image: Rem est reprehenderit.
                token: Ducimus et in quibusdam qui nostrum.
                username: Dicta voluptatem distinctio.
        required:
            - user
    UserRegisterEmailAlreadyUsedResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: false
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: false
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: register_EmailAlreadyUsed_response_body result type (default view)
        example:
            fault: true
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserRegisterRequestBody:
        title: UserRegisterRequestBody
        type: object
        properties:
            email:
                type: string
                example: tanya.abbott@wunsch.name
                format: email
            password:
                type: string
                example: ibh
                minLength: 6
                maxLength: 128
            username:
                type: string
                example: Dii
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            email: gwen.becker@tillman.biz
            password: 0qb
            username: umC6
        required:
            - username
            - email
            - password
    UserRegisterResponseBody:
        title: UserRegisterResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Et doloremque eligendi quae excepturi.
                email: Ut autem aut quas.
                image: Rem est reprehenderit.
                token: Ducimus et in quibusdam qui nostrum.
                username: Dicta voluptatem distinctio.
        required:
            - user
    UserRegisterUsernameAlreadyUsedResponseBody:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: true
        description: register_UsernameAlreadyUsed_response_body result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    UserUpdateRequestBody:
        title: UserUpdateRequestBody
        type: object
        properties:
            bio:
                type: string
                example: p6m
                maxLength: 4096
            email:
                type: string
                example: felton.hauck@bergstromleuschke.name
                format: email
            image:
                type: string
                example: http://2
                pattern: ^https?://.+$
            password:
                type: string
                example: y2c
                minLength: 6
                maxLength: 128
            username:
                type: string
                example: Zozt
                pattern: ^[a-zA-Z0-9_]{3,32}$
        example:
            bio: axh
            email: maiya@okeefe.info
            image: http://f
            password: flo
            username: v4G
    UserUpdateResponseBody:
        title: UserUpdateResponseBody
        type: object
        properties:
            user:
                $ref: '#/definitions/User'
        example:
            user:
                bio: Et doloremque eligendi quae excepturi.
                email: Ut autem aut quas.
                image: Rem est reprehenderit.
                token: Ducimus et in quibusdam qui nostrum.
                username: Dicta voluptatem distinctio.
        required:
            - user
