// Code generated by goa v3.19.1, DO NOT EDIT.
//
// profile HTTP client types
//
// Command:
// $ goa gen github.com/mrngsht/realworld-goa-react/design

package client

import (
	profile "github.com/mrngsht/realworld-goa-react/gen/profile"
	goa "goa.design/goa/v3/pkg"
)

// FollowUserRequestBody is the type of the "profile" service "followUser"
// endpoint HTTP request body.
type FollowUserRequestBody struct {
	Username string `form:"username" json:"username" xml:"username"`
}

// UnfollowUserRequestBody is the type of the "profile" service "unfollowUser"
// endpoint HTTP request body.
type UnfollowUserRequestBody struct {
	Username string `form:"username" json:"username" xml:"username"`
}

// FollowUserResponseBody is the type of the "profile" service "followUser"
// endpoint HTTP response body.
type FollowUserResponseBody struct {
	Profile *ProfileResponseBody `form:"profile,omitempty" json:"profile,omitempty" xml:"profile,omitempty"`
}

// UnfollowUserResponseBody is the type of the "profile" service "unfollowUser"
// endpoint HTTP response body.
type UnfollowUserResponseBody struct {
	Profile *ProfileResponseBody `form:"profile,omitempty" json:"profile,omitempty" xml:"profile,omitempty"`
}

// FollowUserProfileFollowUserBadRequestResponseBody is the type of the
// "profile" service "followUser" endpoint HTTP response body for the
// "ProfileFollowUserBadRequest" error.
type FollowUserProfileFollowUserBadRequestResponseBody struct {
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
}

// UnfollowUserProfileUnfollowUserBadRequestResponseBody is the type of the
// "profile" service "unfollowUser" endpoint HTTP response body for the
// "ProfileUnfollowUserBadRequest" error.
type UnfollowUserProfileUnfollowUserBadRequestResponseBody struct {
	Code *string `form:"code,omitempty" json:"code,omitempty" xml:"code,omitempty"`
}

// ProfileResponseBody is used to define fields on response body types.
type ProfileResponseBody struct {
	Username  *string `form:"username,omitempty" json:"username,omitempty" xml:"username,omitempty"`
	Bio       *string `form:"bio,omitempty" json:"bio,omitempty" xml:"bio,omitempty"`
	Image     *string `form:"image,omitempty" json:"image,omitempty" xml:"image,omitempty"`
	Following *bool   `form:"following,omitempty" json:"following,omitempty" xml:"following,omitempty"`
}

// NewFollowUserRequestBody builds the HTTP request body from the payload of
// the "followUser" endpoint of the "profile" service.
func NewFollowUserRequestBody(p *profile.FollowUserPayload) *FollowUserRequestBody {
	body := &FollowUserRequestBody{
		Username: p.Username,
	}
	return body
}

// NewUnfollowUserRequestBody builds the HTTP request body from the payload of
// the "unfollowUser" endpoint of the "profile" service.
func NewUnfollowUserRequestBody(p *profile.UnfollowUserPayload) *UnfollowUserRequestBody {
	body := &UnfollowUserRequestBody{
		Username: p.Username,
	}
	return body
}

// NewFollowUserResultOK builds a "profile" service "followUser" endpoint
// result from a HTTP "OK" response.
func NewFollowUserResultOK(body *FollowUserResponseBody) *profile.FollowUserResult {
	v := &profile.FollowUserResult{}
	v.Profile = unmarshalProfileResponseBodyToProfileProfile(body.Profile)

	return v
}

// NewFollowUserProfileFollowUserBadRequest builds a profile service followUser
// endpoint ProfileFollowUserBadRequest error.
func NewFollowUserProfileFollowUserBadRequest(body *FollowUserProfileFollowUserBadRequestResponseBody) *profile.ProfileFollowUserBadRequest {
	v := &profile.ProfileFollowUserBadRequest{
		Code: *body.Code,
	}

	return v
}

// NewUnfollowUserResultOK builds a "profile" service "unfollowUser" endpoint
// result from a HTTP "OK" response.
func NewUnfollowUserResultOK(body *UnfollowUserResponseBody) *profile.UnfollowUserResult {
	v := &profile.UnfollowUserResult{}
	v.Profile = unmarshalProfileResponseBodyToProfileProfile(body.Profile)

	return v
}

// NewUnfollowUserProfileUnfollowUserBadRequest builds a profile service
// unfollowUser endpoint ProfileUnfollowUserBadRequest error.
func NewUnfollowUserProfileUnfollowUserBadRequest(body *UnfollowUserProfileUnfollowUserBadRequestResponseBody) *profile.ProfileUnfollowUserBadRequest {
	v := &profile.ProfileUnfollowUserBadRequest{
		Code: *body.Code,
	}

	return v
}

// ValidateFollowUserResponseBody runs the validations defined on
// FollowUserResponseBody
func ValidateFollowUserResponseBody(body *FollowUserResponseBody) (err error) {
	if body.Profile == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("profile", "body"))
	}
	if body.Profile != nil {
		if err2 := ValidateProfileResponseBody(body.Profile); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateUnfollowUserResponseBody runs the validations defined on
// UnfollowUserResponseBody
func ValidateUnfollowUserResponseBody(body *UnfollowUserResponseBody) (err error) {
	if body.Profile == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("profile", "body"))
	}
	if body.Profile != nil {
		if err2 := ValidateProfileResponseBody(body.Profile); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateFollowUserProfileFollowUserBadRequestResponseBody runs the
// validations defined on followUser_ProfileFollowUserBadRequest_response_body
func ValidateFollowUserProfileFollowUserBadRequestResponseBody(body *FollowUserProfileFollowUserBadRequestResponseBody) (err error) {
	if body.Code == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("code", "body"))
	}
	if body.Code != nil {
		if !(*body.Code == "Unspecified" || *body.Code == "UserNotFound" || *body.Code == "UserAlreadyFollowing" || *body.Code == "CannotFollowYourself") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.code", *body.Code, []any{"Unspecified", "UserNotFound", "UserAlreadyFollowing", "CannotFollowYourself"}))
		}
	}
	return
}

// ValidateUnfollowUserProfileUnfollowUserBadRequestResponseBody runs the
// validations defined on
// unfollowUser_ProfileUnfollowUserBadRequest_response_body
func ValidateUnfollowUserProfileUnfollowUserBadRequestResponseBody(body *UnfollowUserProfileUnfollowUserBadRequestResponseBody) (err error) {
	if body.Code == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("code", "body"))
	}
	if body.Code != nil {
		if !(*body.Code == "Unspecified" || *body.Code == "UserNotFound" || *body.Code == "UserNotFollowing") {
			err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.code", *body.Code, []any{"Unspecified", "UserNotFound", "UserNotFollowing"}))
		}
	}
	return
}

// ValidateProfileResponseBody runs the validations defined on
// ProfileResponseBody
func ValidateProfileResponseBody(body *ProfileResponseBody) (err error) {
	if body.Username == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("username", "body"))
	}
	if body.Bio == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("bio", "body"))
	}
	if body.Image == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("image", "body"))
	}
	if body.Following == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("following", "body"))
	}
	return
}
