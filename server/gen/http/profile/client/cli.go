// Code generated by goa v3.19.1, DO NOT EDIT.
//
// profile HTTP client CLI support package
//
// Command:
// $ goa gen github.com/mrngsht/realworld-goa-react/design

package client

import (
	"encoding/json"
	"fmt"

	profile "github.com/mrngsht/realworld-goa-react/gen/profile"
	goa "goa.design/goa/v3/pkg"
)

// BuildFollowUserPayload builds the payload for the profile followUser
// endpoint from CLI flags.
func BuildFollowUserPayload(profileFollowUserBody string) (*profile.FollowUserPayload, error) {
	var err error
	var body FollowUserRequestBody
	{
		err = json.Unmarshal([]byte(profileFollowUserBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"username\": \"9ae\"\n   }'")
		}
		err = goa.MergeErrors(err, goa.ValidatePattern("body.username", body.Username, "^[a-zA-Z0-9_]{3,32}$"))
		if err != nil {
			return nil, err
		}
	}
	v := &profile.FollowUserPayload{
		Username: body.Username,
	}

	return v, nil
}

// BuildUnfollowUserPayload builds the payload for the profile unfollowUser
// endpoint from CLI flags.
func BuildUnfollowUserPayload(profileUnfollowUserBody string) (*profile.UnfollowUserPayload, error) {
	var err error
	var body UnfollowUserRequestBody
	{
		err = json.Unmarshal([]byte(profileUnfollowUserBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"username\": \"W_Pu6\"\n   }'")
		}
		err = goa.MergeErrors(err, goa.ValidatePattern("body.username", body.Username, "^[a-zA-Z0-9_]{3,32}$"))
		if err != nil {
			return nil, err
		}
	}
	v := &profile.UnfollowUserPayload{
		Username: body.Username,
	}

	return v, nil
}
