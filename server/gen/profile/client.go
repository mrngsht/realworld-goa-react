// Code generated by goa v3.19.1, DO NOT EDIT.
//
// profile client
//
// Command:
// $ goa gen github.com/mrngsht/realworld-goa-react/design

package profile

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "profile" service client.
type Client struct {
	FollowUserEndpoint   goa.Endpoint
	UnfollowUserEndpoint goa.Endpoint
}

// NewClient initializes a "profile" service client given the endpoints.
func NewClient(followUser, unfollowUser goa.Endpoint) *Client {
	return &Client{
		FollowUserEndpoint:   followUser,
		UnfollowUserEndpoint: unfollowUser,
	}
}

// FollowUser calls the "followUser" endpoint of the "profile" service.
// FollowUser may return the following errors:
//   - "UserAlreadyFollowing" (type *goa.ServiceError)
//   - "UserNotFollowing" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) FollowUser(ctx context.Context, p *FollowUserPayload) (res *FollowUserResult, err error) {
	var ires any
	ires, err = c.FollowUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FollowUserResult), nil
}

// UnfollowUser calls the "unfollowUser" endpoint of the "profile" service.
// UnfollowUser may return the following errors:
//   - "UserAlreadyFollowing" (type *goa.ServiceError)
//   - "UserNotFollowing" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) UnfollowUser(ctx context.Context, p *UnfollowUserPayload) (res *UnfollowUserResult, err error) {
	var ires any
	ires, err = c.UnfollowUserEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*UnfollowUserResult), nil
}
