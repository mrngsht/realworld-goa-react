// Code generated by goa v3.19.1, DO NOT EDIT.
//
// profile endpoints
//
// Command:
// $ goa gen github.com/mrngsht/realworld-goa-react/design

package profile

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "profile" service endpoints.
type Endpoints struct {
	FollowUser   goa.Endpoint
	UnfollowUser goa.Endpoint
}

// NewEndpoints wraps the methods of the "profile" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		FollowUser:   NewFollowUserEndpoint(s),
		UnfollowUser: NewUnfollowUserEndpoint(s),
	}
}

// Use applies the given middleware to all the "profile" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.FollowUser = m(e.FollowUser)
	e.UnfollowUser = m(e.UnfollowUser)
}

// NewFollowUserEndpoint returns an endpoint function that calls the method
// "followUser" of service "profile".
func NewFollowUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*FollowUserPayload)
		return s.FollowUser(ctx, p)
	}
}

// NewUnfollowUserEndpoint returns an endpoint function that calls the method
// "unfollowUser" of service "profile".
func NewUnfollowUserEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*UnfollowUserPayload)
		return s.UnfollowUser(ctx, p)
	}
}
